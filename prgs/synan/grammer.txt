Source -> Decls .

Decls -> Decl DeclsRst .

DeclsRst -> .
DeclsRst -> Decls.

Decl -> typ identifier : Type ; .
Decl -> var identifier : Type ; .
Decl -> fun identifier ( ParDeclsEps ) : Type BodyEps .

ParDeclsEps -> .
ParDeclsEps -> ParDecls .

ParDecls -> ParDecl ParDeclsRest .

ParDecl -> identifier : Type .

ParDeclsRest -> .
ParDeclsRest -> , ParDecls .

BodyEps -> .
BodyEps -> = Expr .

Type -> void | int | char | bool .
Type -> arr [ Expr ] Type | ptr Type .
Type -> identifier | ( Type ).
Type -> rec ( CompDecls ) .

CompDecls -> CompDecl CompDeclsRest.

CompDecl -> identifier : Type .

CompDeclsRest -> .
CompDeclsRest -> , CompDecls .

Expr -> DisjExpr .

DisjExpr -> ConjExpr DisjExprRest .

DisjExprRest -> .
DisjExprRest -> \ DisjExpr | ^ DisjExpr .

ConjExpr -> RelExpr ConjExprRest .

ConjExprRest -> .
ConjExprRest -> & ConjExpr.

RelExpr -> AddExpr RelExprRest.

RelExprRest -> .
RelExprRest -> eql AddExpr | neq AddExpr | lte AddExpr .
RelExprRest -> mte AddExpr | < AddExpr | > AddExpr .

AddExpr -> MulExpr AddExprRest.

AddExprRest -> .
AddExprRest -> + AddExpr | - AddExpr.

MulExpr -> PrefExpr MulExprRest.

MulExprRest -> .
MulExprRest -> * MulExpr | / MulExpr | % MulExpr.

PrefExpr -> PstfExpr | ! PrefExpr | + PrefExpr | - PrefExpr .
PrefExpr -> @ PrefExpr | $ PrefExpr | new ( Type ) | del ( Expr ) .

PstfExpr -> AtomExpr PstfExprRest .

PstfExprRest -> .
PstfExprRest -> [ Expr ] PstfExprRest .
PstfExprRest -> ~ identifier PstfExprRest .

AtomExpr -> literal | identifier CallEps | ( Expr CastEps ).
AtomExpr -> { Stmts : Expr WhereEps } .

CallEps -> .
CallEps -> ( ArgsEps ) .

ArgsEps -> .
ArgsEps -> Args ArgsRest .

Args -> Expr .

ArgsRest -> , ArgsEps .

CastEps -> .
CastEps -> : Type .

WhereEps -> where Decls .

Stmts -> Stmt StmtsRest.

StmtsRest -> .
StmtsRest -> Stmts.

Stmt -> Expr AssignEps ; .
Stmt -> if Expr then Stmts ElseEps end ; .
Stmt -> while Expr do Stmts end ; .

AssignEps -> .
AssignEps -> = Expr .

ElseEps -> .
ElseEps -> else Stmts .